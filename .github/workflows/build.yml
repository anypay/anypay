name: Build
on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'
jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgis/postgis
        env:
          # optional (defaults to `postgres`)
          POSTGRES_DB: postgres_db
          # required
          POSTGRES_PASSWORD: postgres_password
          # optional (defaults to `5432`)
          POSTGRES_PORT: 5432
          # optional (defaults to `postgres`)
          POSTGRES_USER: postgres_user
        ports:
          - 5432/tcp
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      rabbitmq:
        image: rabbitmq:3
        ports:
          - 5672:5672
          - 15672:15672
        env:
          RABBITMQ_DEFAULT_USER: guest
          RABBITMQ_DEFAULT_PASS: guest
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    steps:
      - uses: actions/checkout@v4
      - name: Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm install -g typescript tsc
      - name: install, build and test
        env:
          SKIP_E2E_PAYMENTS_TESTS: true
          DEV_DATABASE_URL: postgres://postgres_user:postgres_password@127.0.0.1:${{ job.services.postgres.ports['5432'] }}/postgres_db
          DATABASE_URL: postgres://postgres_user:postgres_password@127.0.0.1:${{ job.services.postgres.ports['5432'] }}/postgres_db
          TEST_DATABASE_URL: postgres://postgres_user:postgres_password@127.0.0.1:${{ job.services.postgres.ports['5432'] }}/postgres_db
          AMQP_URL: amqp://guest:guest@127.0.0.1:${{ job.services.rabbitmq.ports['5672'] }}/
          ANYPAY_AMQP_URL: amqp://guest:guest@127.0.0.1:${{ job.services.rabbitmq.ports['5672'] }}/
          TEST_AMQP_URL: amqp://guest:guest@127.0.0.1:${{ job.services.rabbitmq.ports['5672'] }}/
          INFURA_POLYGON_URL: ${{ secrets.INFURA_POLYGON_URL }}
          INFURA_ETHEREUM_URL: ${{ secrets.INFURA_ETHEREUM_URL }}
          INFURA_AVALANCHE_URL: ${{ secrets.INFURA_AVALANCHE_URL }}
          GETBLOCK_BCH_URL: ${{ secrets.GETBLOCK_BCH_URL }}
          GETBLOCK_LTC_URL: ${{ secrets.GETBLOCK_LTC_URL }}
          GETBLOCK_DOGE_URL: ${{ secrets.GETBLOCK_DOGE_URL }}
          GETBLOCK_DASH_URL: ${{ secrets.GETBLOCK_DASH_URL }}
          GETBLOCK_BTC_URL: ${{ secrets.GETBLOCK_BTC_URL }}
          GETBLOCK_XMR_URL: ${{ secrets.GETBLOCK_XMR_URL }}
          GETBLOCK_BSV_URL: ${{ secrets.GETBLOCK_BSV_URL }}
        run: |
          npm install
          npx prisma generate
          npx prisma db push
          npm test
      - uses: codecov/codecov-action@v3
