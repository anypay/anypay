{"version":3,"sources":["vendor/ember-cli/tests-prefix.js","energy-city-app/tests/app.lint-test.js","energy-city-app/tests/helpers/destroy-app.js","energy-city-app/tests/helpers/module-for-acceptance.js","energy-city-app/tests/helpers/resolver.js","energy-city-app/tests/helpers/start-app.js","energy-city-app/tests/integration/components/location-list-test.js","energy-city-app/tests/integration/components/money-button-test.js","energy-city-app/tests/test-helper.js","energy-city-app/tests/tests.lint-test.js","energy-city-app/tests/unit/controllers/application-test.js","energy-city-app/tests/unit/controllers/business-test.js","energy-city-app/tests/unit/controllers/moneybutton-auth-redirect-test.js","energy-city-app/tests/unit/controllers/root-test.js","energy-city-app/tests/unit/initializers/websockets-test.js","energy-city-app/tests/unit/routes/application-test.js","energy-city-app/tests/unit/routes/business-test.js","energy-city-app/tests/unit/routes/cities-test.js","energy-city-app/tests/unit/routes/city-test.js","energy-city-app/tests/unit/routes/geolocate-test.js","energy-city-app/tests/unit/routes/index-test.js","energy-city-app/tests/unit/routes/invoice-test.js","energy-city-app/tests/unit/routes/map-test.js","energy-city-app/tests/unit/routes/moneybutton-auth-redirect-test.js","energy-city-app/tests/unit/routes/payments-test.js","energy-city-app/tests/unit/services/cities-test.js","energy-city-app/tests/unit/services/geolocation-test.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["'use strict';\n","define('energy-city-app/tests/app.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('ESLint | app');\n\n  QUnit.test('app.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'app.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('authenticators/token.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'authenticators/token.js should pass ESLint\\n\\n12:22 - \\'$\\' is not defined. (no-undef)\\n18:5 - Unexpected console statement. (no-console)');\n  });\n\n  QUnit.test('components/location-list.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/location-list.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('components/money-button.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/money-button.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('controllers/application.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'controllers/application.js should pass ESLint\\n\\n10:3 - Duplicate key \\'geolocation\\'. (no-dupe-keys)');\n  });\n\n  QUnit.test('controllers/business.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'controllers/business.js should pass ESLint\\n\\n2:8 - \\'config\\' is defined but never used. (no-unused-vars)\\n8:1 - Unexpected console statement. (no-console)\\n48:7 - Unexpected console statement. (no-console)\\n54:7 - Unexpected console statement. (no-console)\\n63:7 - Unexpected console statement. (no-console)\\n67:7 - Unexpected console statement. (no-console)\\n81:7 - \\'$\\' is not defined. (no-undef)\\n83:7 - Unexpected console statement. (no-console)\\n85:7 - \\'$\\' is not defined. (no-undef)');\n  });\n\n  QUnit.test('controllers/cities.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'controllers/cities.js should pass ESLint\\n\\n12:7 - Unexpected console statement. (no-console)');\n  });\n\n  QUnit.test('controllers/city.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'controllers/city.js should pass ESLint\\n\\n16:5 - Unexpected console statement. (no-console)\\n22:5 - Unexpected console statement. (no-console)\\n27:7 - Unexpected console statement. (no-console)\\n47:7 - Unexpected console statement. (no-console)');\n  });\n\n  QUnit.test('controllers/leaderboard.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/leaderboard.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('controllers/moneybutton-auth-redirect.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/moneybutton-auth-redirect.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('initializers/websockets.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'initializers/websockets.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('resolver.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'resolver.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('router.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'router.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('routes/application.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'routes/application.js should pass ESLint\\n\\n16:5 - Unexpected console statement. (no-console)\\n23:7 - Unexpected console statement. (no-console)\\n28:7 - Unexpected console statement. (no-console)\\n47:7 - Unexpected console statement. (no-console)');\n  });\n\n  QUnit.test('routes/business.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'routes/business.js should pass ESLint\\n\\n41:5 - Unexpected console statement. (no-console)\\n43:5 - Unexpected console statement. (no-console)\\n75:5 - Unexpected console statement. (no-console)');\n  });\n\n  QUnit.test('routes/cities.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'routes/cities.js should pass ESLint\\n\\n11:9 - \\'params\\' is defined but never used. (no-unused-vars)');\n  });\n\n  QUnit.test('routes/city.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'routes/city.js should pass ESLint\\n\\n68:5 - Unexpected console statement. (no-console)');\n  });\n\n  QUnit.test('routes/geolocate.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'routes/geolocate.js should pass ESLint\\n\\n23:9 - Unexpected console statement. (no-console)\\n25:13 - \\'cities\\' is assigned a value but never used. (no-unused-vars)\\n34:7 - Unexpected console statement. (no-console)');\n  });\n\n  QUnit.test('routes/index.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/index.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('routes/invoice.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/invoice.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('routes/leaderboard.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/leaderboard.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('routes/logout.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/logout.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('routes/map.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'routes/map.js should pass ESLint\\n\\n6:7 - Unexpected console statement. (no-console)\\n19:5 - Unexpected console statement. (no-console)\\n26:7 - Unexpected console statement. (no-console)');\n  });\n\n  QUnit.test('routes/moneybutton-auth-redirect.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'routes/moneybutton-auth-redirect.js should pass ESLint\\n\\n2:8 - \\'$\\' is defined but never used. (no-unused-vars)\\n26:7 - Unexpected console statement. (no-console)');\n  });\n\n  QUnit.test('routes/payments.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'routes/payments.js should pass ESLint\\n\\n26:5 - Unexpected console statement. (no-console)');\n  });\n\n  QUnit.test('services/cities.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'services/cities.js should pass ESLint\\n\\n66:5 - Unexpected console statement. (no-console)');\n  });\n\n  QUnit.test('services/geolocation.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'services/geolocation.js should pass ESLint\\n\\n15:7 - \\'geolocator\\' is not defined. (no-undef)\\n41:13 - Unexpected console statement. (no-console)\\n44:11 - Unexpected console statement. (no-console)\\n91:2 - Unnecessary semicolon. (no-extra-semi)');\n  });\n\n  QUnit.test('services/leaderboard.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'services/leaderboard.js should pass ESLint\\n\\n3:20 - \\'service\\' is defined but never used. (no-unused-vars)');\n  });\n});","define('energy-city-app/tests/helpers/destroy-app', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = destroyApp;\n  function destroyApp(application) {\n    Ember.run(application, 'destroy');\n  }\n});","define('energy-city-app/tests/helpers/module-for-acceptance', ['exports', 'qunit', 'energy-city-app/tests/helpers/start-app', 'energy-city-app/tests/helpers/destroy-app'], function (exports, _qunit, _startApp, _destroyApp) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  exports.default = function (name) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    (0, _qunit.module)(name, {\n      beforeEach: function beforeEach() {\n        this.application = (0, _startApp.default)();\n\n        if (options.beforeEach) {\n          return options.beforeEach.apply(this, arguments);\n        }\n      },\n      afterEach: function afterEach() {\n        var _this = this;\n\n        var afterEach = options.afterEach && options.afterEach.apply(this, arguments);\n        return resolve(afterEach).then(function () {\n          return (0, _destroyApp.default)(_this.application);\n        });\n      }\n    });\n  };\n\n  var resolve = Ember.RSVP.resolve;\n});","define('energy-city-app/tests/helpers/resolver', ['exports', 'energy-city-app/resolver', 'energy-city-app/config/environment'], function (exports, _resolver, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n\n  var resolver = _resolver.default.create();\n\n  resolver.namespace = {\n    modulePrefix: _environment.default.modulePrefix,\n    podModulePrefix: _environment.default.podModulePrefix\n  };\n\n  exports.default = resolver;\n});","define('energy-city-app/tests/helpers/start-app', ['exports', 'energy-city-app/app', 'energy-city-app/config/environment'], function (exports, _app, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = startApp;\n  function startApp(attrs) {\n    var attributes = Ember.merge({}, _environment.default.APP);\n    attributes = Ember.merge(attributes, attrs); // use defaults, but you can override;\n\n    return Ember.run(function () {\n      var application = _app.default.create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n      return application;\n    });\n  }\n});","define('energy-city-app/tests/integration/components/location-list-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForComponent)('location-list', 'Integration | Component | location list', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"/KAjvSQe\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[18,\\\"location-list\\\"],false]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"RT7o2pnY\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n\\\"],[4,\\\"location-list\\\",null,null,{\\\"statements\\\":[[0,\\\"      template block text\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"  \\\"]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('energy-city-app/tests/integration/components/money-button-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForComponent)('money-button', 'Integration | Component | money button', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"4mdNgptU\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[18,\\\"money-button\\\"],false]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"gG0J82x8\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n\\\"],[4,\\\"money-button\\\",null,null,{\\\"statements\\\":[[0,\\\"      template block text\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"  \\\"]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('energy-city-app/tests/test-helper', ['energy-city-app/tests/helpers/resolver', 'ember-qunit', 'ember-cli-qunit'], function (_resolver, _emberQunit, _emberCliQunit) {\n  'use strict';\n\n  (0, _emberQunit.setResolver)(_resolver.default);\n  (0, _emberCliQunit.start)();\n});","define('energy-city-app/tests/tests.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('ESLint | tests');\n\n  QUnit.test('helpers/destroy-app.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/destroy-app.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('helpers/module-for-acceptance.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/module-for-acceptance.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('helpers/resolver.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/resolver.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('helpers/start-app.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/start-app.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/location-list-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/location-list-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/money-button-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/money-button-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('test-helper.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'test-helper.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/controllers/application-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/application-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/controllers/business-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/business-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/controllers/moneybutton-auth-redirect-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/moneybutton-auth-redirect-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/controllers/root-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/root-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/initializers/websockets-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/initializers/websockets-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/routes/application-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/application-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/routes/business-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/business-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/routes/cities-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/cities-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/routes/city-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/city-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/routes/geolocate-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/geolocate-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/routes/index-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/index-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/routes/invoice-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/invoice-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/routes/map-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/map-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/routes/moneybutton-auth-redirect-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/moneybutton-auth-redirect-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/routes/payments-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/payments-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/services/cities-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/services/cities-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/services/geolocation-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/services/geolocation-test.js should pass ESLint\\n\\n');\n  });\n});","define('energy-city-app/tests/unit/controllers/application-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('controller:application', 'Unit | Controller | application', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('energy-city-app/tests/unit/controllers/business-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('controller:business', 'Unit | Controller | business', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('energy-city-app/tests/unit/controllers/moneybutton-auth-redirect-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('controller:moneybutton-auth-redirect', 'Unit | Controller | moneybutton auth redirect', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('energy-city-app/tests/unit/controllers/root-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('controller:root', 'Unit | Controller | root', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('energy-city-app/tests/unit/initializers/websockets-test', ['energy-city-app/initializers/websockets', 'qunit', 'energy-city-app/tests/helpers/destroy-app'], function (_websockets, _qunit, _destroyApp) {\n  'use strict';\n\n  (0, _qunit.module)('Unit | Initializer | websockets', {\n    beforeEach: function beforeEach() {\n      var _this = this;\n\n      Ember.run(function () {\n        _this.application = Ember.Application.create();\n        _this.application.deferReadiness();\n      });\n    },\n    afterEach: function afterEach() {\n      (0, _destroyApp.default)(this.application);\n    }\n  });\n\n  // Replace this with your real tests.\n  (0, _qunit.test)('it works', function (assert) {\n    (0, _websockets.initialize)(this.application);\n\n    // you would normally confirm the results of the initializer here\n    assert.ok(true);\n  });\n});","define('energy-city-app/tests/unit/routes/application-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('route:application', 'Unit | Route | application', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('energy-city-app/tests/unit/routes/business-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('route:business', 'Unit | Route | business', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('energy-city-app/tests/unit/routes/cities-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('route:cities', 'Unit | Route | cities', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('energy-city-app/tests/unit/routes/city-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('route:city', 'Unit | Route | city', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('energy-city-app/tests/unit/routes/geolocate-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('route:geolocate', 'Unit | Route | geolocate', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('energy-city-app/tests/unit/routes/index-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('route:index', 'Unit | Route | index', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('energy-city-app/tests/unit/routes/invoice-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('route:invoice', 'Unit | Route | invoice', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('energy-city-app/tests/unit/routes/map-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('route:map', 'Unit | Route | map', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('energy-city-app/tests/unit/routes/moneybutton-auth-redirect-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('route:moneybutton-auth-redirect', 'Unit | Route | moneybutton auth redirect', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('energy-city-app/tests/unit/routes/payments-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('route:payments', 'Unit | Route | payments', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('energy-city-app/tests/unit/services/cities-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('service:cities', 'Unit | Service | cities', {\n    // Specify the other units that are required for this test.\n    // needs: ['service:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var service = this.subject();\n    assert.ok(service);\n  });\n});","define('energy-city-app/tests/unit/services/geolocation-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('service:geolocation', 'Unit | Service | geolocation', {\n    // Specify the other units that are required for this test.\n    // needs: ['service:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var service = this.subject();\n    assert.ok(service);\n  });\n});","require('energy-city-app/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n"],"names":[],"mappings":"AAAA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvfile":"tests.js"}